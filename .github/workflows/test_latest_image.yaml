name: Manual Test Latest Docker Image

on:
  workflow_dispatch:  # Allows manual triggering from GitHub UI
    inputs:
      tag:
        description: 'Docker image tag to test (leave empty to use latest v* tag)'
        required: false
        type: string

jobs:
  test-latest-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags to ensure complete repository state
          fetch-depth: 0
          # Download all refs including tags and branches
          ref: ${{ github.ref }}

      # Get the latest v* tag from the repository or use manual input
      - name: Get Docker Tag
        id: get_tag
        run: |
          # Use manual input tag if provided, otherwise find latest v* tag
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            tag="${{ github.event.inputs.tag }}"
            echo "Using manually provided tag: $tag"
          else
            # Fetch all tags, filter for v* pattern with numeric versions (v0.1, v1.2.3, etc.)
            # This regex matches v followed by digits and dots only
            latest_tag=$(git tag -l "v*" | grep -E '^v[0-9]+(\.[0-9]+)*$' | sort -V | tail -n 1)
            
            # Check if we found a valid numeric version tag
            if [ -z "$latest_tag" ]; then
              echo "Error: No numeric v* tags found in repository (e.g., v0.1, v1.2.3)"
              echo "Available v* tags:"
              git tag -l "v*" || echo "No v* tags found"
              exit 1
            fi
            
            tag="$latest_tag"
            echo "Latest numeric v* tag found: $tag"
          fi
          
          echo "tag=$tag" >> $GITHUB_OUTPUT

      # Test all DevOps tools in the specified Docker image
      - name: Test DevOps Tools in Docker Image
        run: |
          # Use the determined tag to reference the Docker image
          image_tag="gfish/devenv_amazonlinux_2023:${{ steps.get_tag.outputs.tag }}"
          echo "Testing Docker image: $image_tag"

          TEST_SCRIPT="./Scripts/test-devops-tools.sh"
          # Verify the test script exists before running
          if [ ! -f "$TEST_SCRIPT" ]; then
            echo "Error: $TEST_SCRIPT not found in workspace"
            exit 1
          fi
          
          # Make sure test script is executable
          chmod +x "$TEST_SCRIPT"
          
          # Copy test script into container and run it against the specified tagged image
          docker run --rm --entrypoint /bin/bash \
            -v ${{ github.workspace }}:/tmp \
            $image_tag \
            -c "cd /tmp/Scripts && ./test-devops-tools.sh"

      # Display test results summary
      - name: Test Results Summary
        if: always()  # Run even if previous steps fail
        run: |
          echo "=== Test Summary ==="
          echo "Tested image: gfish/devenv_amazonlinux_2023:${{ steps.get_tag.outputs.tag }}"
          if [ $? -eq 0 ]; then
            echo "✅ All DevOps tools tests passed successfully"
          else
            echo "❌ Some DevOps tools tests failed"
          fi